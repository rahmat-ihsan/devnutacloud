<?php

/**
 * Created by PhpStorm.
 * User: husnan
 * Date: 21/11/16
 * Time: 13:09
 */
class Kategori extends CI_Model
{
    var $_tableName = "mastercategory";
    protected $_dbMaster;

    public function __construct()
    {
        parent::__construct();
        $this->load->database();
        $this->load->model('Firebasemodel');
    }

    protected function initDbMaster()
    {
        $this->_dbMaster = $this->load->database('master', true);
    }

    public function createKategori($idoutlet, $namakategori, $perusahaanNo)
    {
        $this->initDbMaster();

        $this->load->model('Options');
        $options = $this->Options->get_by_devid($idoutlet);
        $cloudDevno = 0;
        if($options->CreatedVersionCode<103 && $options->EditedVersionCode<103) {
            $cloudDevno = 1;
        }

        $this->_dbMaster->where(array('DeviceID' => $idoutlet, 'CategoryName' => $namakategori));
        $query = $this->_dbMaster->get('mastercategory');
        $count = $query->num_rows();
        if ($count > 0) {
            return 'Nama Kategori sudah terdaftar';
        } else {
            $sql_generate_id = "
        SELECT
          COALESCE (MAX(CategoryID),0) +1 as ID
        FROM
        (SELECT
            CategoryID
        FROM
            mastercategory
        WHERE
            DeviceID = " . $this->db->escape($idoutlet) . " UNION ALL SELECT
            CategoryID
        FROM
            mastercategorydelete
        WHERE
            DeviceID = " . $this->db->escape($idoutlet) . ") a
        ";
            $queryid = $this->db->query($sql_generate_id);
            $resultid = $queryid->row();
            $categoryid = $resultid->ID;

            $attrib_data = array(
                'CategoryID' => $categoryid,
                'DeviceID' => $idoutlet,
                'DeviceNo' => $cloudDevno,
                'CategoryName' => $namakategori,
                'Varian' => 'Nuta',
                'HasBeenDownloaded' => 0,
                'PerusahaanNo' => $perusahaanNo
            );

            $insert_result = $this->_dbMaster->insert('mastercategory', $attrib_data);

            if ($insert_result) {
                $query_datainserted = $this->_dbMaster->get_where('mastercategory', array(
                    'CategoryID' => $categoryid,
                    'DeviceID' => $idoutlet,
                    'DeviceNo' => $cloudDevno,
                    'PerusahaanNo' => $perusahaanNo));
                $last_insert_data = array(
                    "table" => $this->_tableName,
                    "column" => $query_datainserted->row_array()
                );
                $this->Firebasemodel->push_firebase($idoutlet, $last_insert_data,
                    $categoryid, $cloudDevno, $perusahaanNo, 0);
            }

            return $categoryid . "." . $cloudDevno;
        }
    }

    public function editKategori($idkategori, $devno, $idOutlet, $namaKategoriLama, $namaKategoriBaru)
    {
        $this->initDbMaster();
        $query_datawillbeupdated = $this->_dbMaster->get_where($this->_tableName, array(
            'CategoryName' => $namaKategoriLama,
            'DeviceID' => $idOutlet
        ));
        $rows = $query_datawillbeupdated->row_array();

        if (isset($rows) && count($rows) > 0) {
            $isKategoriUnique = $this->isKategoriNotExist($idOutlet, $namaKategoriBaru);
            if ($isKategoriUnique) {
                $this->_dbMaster->where(array('DeviceID' => $idOutlet,
                    'CategoryName' => $namaKategoriLama, 'CategoryID' => $idkategori, 'DeviceNo' => $devno));
                $this->_dbMaster->update('mastercategory', array('CategoryName' => $namaKategoriBaru, 'HasBeenDownloaded' => 0));

                $query_dataupdated = $this->_dbMaster->get_where('mastercategory', array(
                    'CategoryID' => $idkategori,
                    'DeviceID' => $idOutlet, 'DeviceNo' => $devno
//                'PerusahaanNo' => $perusahaanNo
                ));
                $last_update_data = array(
                    "table" => $this->_tableName,
                    "column" => $query_dataupdated->row_array()
                );
                $this->Firebasemodel->push_firebase($idOutlet, $last_update_data,
                    $idkategori, $devno, getPerusahaanNo(), 0);
                return '';
            } else {
                return 'Nama Kategori sudah terdaftar';
            }
        } else {
            $this->createKategori($idOutlet, $namaKategoriBaru, getPerusahaanNo());
            return '';
        }

    }

    public function deleteKategori($namaKategori, $arrayOfidOutlet, $perusahaanNo)
    {
        $this->initDbMaster();
        $log = '';
        foreach ($arrayOfidOutlet as $index => $idoutlet) {
            $idkategori = $this->getKategoriIDByName($idoutlet, $namaKategori, $perusahaanNo);
            // 0. Update Item
            $this->_dbMaster->query('UPDATE masteritem SET HasBeenDownloaded=0 , CategoryID = 0 WHERE DeviceID = ' . $this->_dbMaster->escape($idoutlet) .
                ' AND CategoryID = ' . $this->_dbMaster->escape($idkategori));

            $query = $this->_dbMaster->get_where('mastercategory', array('DeviceID' => $idoutlet,
                'CategoryName' => $namaKategori));
            $datas = $query->result_array();


            for ($a = 0; $a < count($datas); $a++) {
                //1. Insert ke category delete
                $datas[$a]['HasBeenDownloaded'] = 0;
                $q2 = $this->_dbMaster->get_where('mastercategorydelete', array(
                    'DeviceID' => $idoutlet, 'CategoryID' => $datas[$a]['CategoryID'],
                    'DeviceNo' => $datas[$a]['DeviceNo']));
                $rows2 = $q2->result_array();
                if(count($rows2) == 0) {
                    $datas[0]['HasBeenDownloaded'] = 0;
                    $this->_dbMaster->insert('mastercategorydelete', $datas[0]);
                }

                //2. Hapus Kategori
                $this->_dbMaster->where(array('DeviceID' => $idoutlet,
                    'CategoryID' => $datas[$a]['CategoryID'],
                    'DeviceNo' => $datas[$a]['DeviceNo']));
                $this->_dbMaster->delete('mastercategory');

                $deleted_data = array(
                    "table" => "delete" . $this->_tableName,
                    "column" => array("CategoryID" => $datas[$a]['CategoryID'],
                        'DeviceNo' => $datas[$a]['DeviceNo'])
                );
                $this->Firebasemodel->push_firebase($idoutlet, $deleted_data,
                    $datas[$a]['CategoryID'], $datas[$a]['DeviceNo'], $perusahaanNo, 0);
            }

            $log .= $idoutlet . ' berhasil dihapus. ';
        }
        return $log;
    }

    public function getKategoriIDByName($idoutlet, $namakategori, $perusahaanNo)
    {
        $this->initDbMaster();

        $this->load->model('Options');
        $options = $this->Options->get_by_devid($idoutlet);
        $cloudDevno = 0;
        if($options->CreatedVersionCode<103 && $options->EditedVersionCode<103) {
            $cloudDevno = 1;
        }

        $this->_dbMaster->where(array('DeviceID' => $idoutlet,
            'CategoryName' => $namakategori, 'PerusahaanNo' => $perusahaanNo));
        $query = $this->_dbMaster->get('mastercategory');
        $count = $query->num_rows();
        if ($count > 0) {
            $result = $query->result();
            return $result[0]->CategoryID . "." . $result[0]->DeviceNo;

        } else {
            $sql_generate_id = "
        SELECT COALESCE (MAX(CategoryID),0) +1 as ID
        FROM
        (
            SELECT CategoryID
            FROM mastercategory 
            WHERE DeviceID = " . $this->db->escape($idoutlet) . " 
            UNION ALL 
            SELECT CategoryID
            FROM mastercategorydelete
            WHERE DeviceID = " . $this->db->escape($idoutlet) . "
        ) a
        ";

            $queryid = $this->db->query($sql_generate_id);
            $resultid = $queryid->row();
            $categoryid = $resultid->ID;

            $attrib_data = array(
                'CategoryID' => $categoryid,
                'DeviceID' => $idoutlet,
                'DeviceNo' => $cloudDevno,
                'CategoryName' => $namakategori,
                'Varian' => 'Nuta',
                'HasBeenDownloaded' => 0,
                'PerusahaanNo' => $perusahaanNo
            );

            $insert_result = $this->_dbMaster->insert('mastercategory', $attrib_data);

            if ($insert_result) {
                $query_datainserted = $this->_dbMaster->get_where('mastercategory', array(
                    'CategoryID' => $categoryid,
                    'DeviceID' => $idoutlet,
                    'DeviceNo' => $cloudDevno,
                    'PerusahaanNo' => $perusahaanNo));
                $last_insert_data = array(
                    "table" => $this->_tableName,
                    "column" => $query_datainserted->row_array()
                );
                $this->Firebasemodel->push_firebase($idoutlet, $last_insert_data,
                    $categoryid, $cloudDevno, $perusahaanNo, 0);
            }

            return $categoryid . "." . $cloudDevno;
        }
    }

    public function getByName($namakategori, $idoutlet)
    {

        $query = $this->db->get_where($this->_tableName, array('CategoryName' => $namakategori, 'DeviceID' => $idoutlet));
        $result = $query->result();
        if (count($result) > 0) {
            return $result[0];
        } else {
            return null;
        }

    }

    public function getByID($id, $idoutlet)
    {
        $realkategoriid = explode(".", $id)[0];
        $devno = explode(".", $id)[1];

        $query = $this->db->get_where($this->_tableName, array('CategoryID' => $realkategoriid,
            'DeviceNo' => $devno, 'DeviceID' => $idoutlet));
        $result = $query->result();
        if (count($result) > 0) {
            return $result[0];
        } else {
            return null;
        }
    }

    public function isKategoriNotExist($idoutlet, $namakategori)
    {
        $query = $this->db->get_where('mastercategory', array('DeviceID' => $idoutlet, 'CategoryName' => $namakategori));
        $count = $query->num_rows();
        return $count == 0;
    }

    public function getDaftarKategori($idoutlet)
    {
        $query = $this->db->get_where('mastercategory', array('DeviceID' => $idoutlet));
        $result = $query->result();
        $retval = array();
        foreach ($result as $r) {
            $retval[$r->CategoryID . "." . $r->DeviceNo] = $r->CategoryName;
        }
        return $retval;
    }

    public function isKategoriInMultiOutlet($namakategori, $perusahaanID)
    {
        $query = $this->db->query("select OutletID from outlet where outletid in (select DeviceID from mastercategory where CategoryName="
            . $this->db->escape($namakategori) .
            ") AND PerusahaanID=" . $this->db->escape($perusahaanID));
        $result = $query->result();
        $retval = array();
        foreach ($result as $r) {
            array_push($retval, $r->OutletID);
        }
        return $retval;
    }

    public function getMaxCategoriID($idoutlet)
    {
        $sql = "
        SELECT
          COALESCE (MAX(CategoryID),0) +1 as id
        FROM
        (SELECT
            CategoryID
        FROM
            mastercategory
        WHERE
            DeviceID = " . $this->db->escape($idoutlet) . " UNION ALL SELECT
            CategoryID
        FROM
            mastercategorydelete
        WHERE
            DeviceID = " . $this->db->escape($idoutlet) . ") a
        ";

        $queryid = $this->db->query($sql);
        $resultid = $queryid->result();
        $categoryid = $resultid[0]->id;
        return $categoryid;
    }
}